// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using sLog.Models;

namespace sLog.Migrations
{
    [DbContext(typeof(sLogContext))]
    partial class sLogContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.4-rtm-31024")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("sLog.Models.Log", b =>
                {
                    b.Property<Guid>("LogId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Data");

                    b.Property<string>("MimeType");

                    b.Property<int>("RegistrationId");

                    b.Property<DateTime>("Timestamp");

                    b.HasKey("LogId");

                    b.HasIndex("RegistrationId");

                    b.ToTable("Log");
                });

            modelBuilder.Entity("sLog.Models.Registration", b =>
                {
                    b.Property<int>("RegistrationId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description");

                    b.Property<string>("EMailAddress");

                    b.Property<Guid>("RegistrationToken");

                    b.HasKey("RegistrationId");

                    b.ToTable("Registration");
                });

            modelBuilder.Entity("sLog.Models.Log", b =>
                {
                    b.HasOne("sLog.Models.Registration", "Registration")
                        .WithMany("Logs")
                        .HasForeignKey("RegistrationId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
