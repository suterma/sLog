@using System.Data
@model Query

@{
    ViewData["Title"] = "Index";
}

<h2>Index</h2>

<h4>Query</h4>
<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="Index">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <partial name="_ConnectionStringPartial" for="ConnectionString" />
            <div class="form-group">
                <label asp-for="SelectCommand" class="control-label"></label>
                <input asp-for="SelectCommand" class="form-control" value="SELECT * FROM Log" />
                <span asp-validation-for="SelectCommand" class="text-danger"></span>
            </div>
            <div class="form-group">
                <input type="submit" value="Execute" class="btn btn-default" />
            </div>
        </form>
    </div>
</div>

@*Display the retrieved data and schema, if available*@
@if (Model != null && Model.TableSchema != null && Model.DataSet != null)
{
    <table class="table">
        <thead>
            <tr>
                @*Show the SQL type, if available*@
                @foreach (DataRow schemaRow in Model.TableSchema.Rows)
                {
                    <th>
                        @*Column Name*@
                        @*@Html.Raw(schemaRow["ColumnName"])*@

                        @*SQL Type*@
                        <span class="label label-default">@Html.Raw(schemaRow["DataTypeName"])</span>

                        @*Is part of the Key (unfortunately does not work, dunno why)*@
                        @if (schemaRow["IsKey"] != DBNull.Value && (bool)schemaRow["IsKey"])
                        {
                            <span class="label label-default"><i class="glyphicon glyphicon-tag" title="Primary Key"></i></span>
                        }@*Whether nullable*@@if (schemaRow["AllowDBNull"] != DBNull.Value && (bool)schemaRow["AllowDBNull"])
                        {
                            <span class="label label-default">
                                <i class="glyphicon glyphicon-remove-circle" title="Allows NULL"></i>
                            </span>
                        }
                    </th>
                }
            </tr>

            <tr>
                @*Show the column name and the .NET type*@
                @foreach (DataColumn dataColumn in Model.DataSet.Columns)
                {
                    <th>
                        @Html.Raw(dataColumn.ColumnName) <span class="label label-primary">@Html.Raw(dataColumn.DataType)</span>
                    </th>
                }
            </tr>
        </thead>
        <tbody>
            @foreach (DataRow row in Model.DataSet.Rows)
            {
                <tr>
                    @foreach (var value in row.ItemArray)
                    {
                        <td>
                            @Html.Raw(value)
                        </td>
                    }
                </tr>
            }
        </tbody>
    </table>
}

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}